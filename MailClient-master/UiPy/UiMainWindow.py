# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import treemodel
import treeview

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1026, 698)
        MainWindow.setIconSize(QtCore.QSize(30, 30))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Основной layout
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")

        # Почтовый ящик (дерево) - заменяем QTreeWidget на QTreeView с кастомной моделью
        self.tv_mailbox = treeview.TreeView(self.centralwidget)
        self.tv_mailbox.setMaximumSize(QtCore.QSize(200, 16777215))
        self.tv_mailbox.setObjectName("tv_mailbox")
        self.tv_mailbox.setModel(treemodel.TreeModel())
        self.gridLayout.addWidget(self.tv_mailbox, 0, 0, 5, 1)

        # Список писем (QTableView)
        self.tv_maillist = QtWidgets.QTableView(self.centralwidget)
        self.tv_maillist.setObjectName("tv_maillist")
        self.tv_maillist.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tv_maillist.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tv_maillist.setAlternatingRowColors(True)
        self.tv_maillist.setSortingEnabled(False)

        # Содержимое письма (QTextEdit) - с настройками шрифта, как в старом
        self.te_content = QtWidgets.QTextEdit(self.centralwidget)
        self.te_content.setObjectName("te_content")
        self.te_content.setFont(QtGui.QFont("Tahoma", 10, QtGui.QFont.Bold))
        self.te_content.setReadOnly(True)

        # Разделитель (QSplitter)
        self.splitter = QtWidgets.QSplitter(QtCore.Qt.Vertical)
        self.splitter.addWidget(self.tv_maillist)
        self.splitter.addWidget(self.te_content)
        self.gridLayout.addWidget(self.splitter, 0, 1, 1, 4)

        # Список вложений
        self.attachments_list = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        self.attachments_list.setSizePolicy(sizePolicy)
        self.attachments_list.setMaximumSize(QtCore.QSize(16777215, 30))
        self.attachments_list.setObjectName("attachments_list")
        self.gridLayout.addWidget(self.attachments_list, 4, 1, 1, 1)

        # # Кнопка "Проверить адресанта"
        # self.Check_button = QtWidgets.QPushButton(self.centralwidget)
        # self.Check_button.setObjectName("Check_button")
        # self.gridLayout.addWidget(self.Check_button, 4, 4, 1, 1)

        # Кнопка "Дешифровать"
        self.decrypt_button = QtWidgets.QPushButton(self.centralwidget)
        self.decrypt_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        self.decrypt_button.setSizePolicy(sizePolicy)
        self.decrypt_button.setObjectName("decrypt_button")
        self.decrypt_button.setFixedSize(100, 40)
        self.decrypt_button.setVisible(False)
        self.gridLayout.addWidget(self.decrypt_button, 4, 3, 1, 1)

        # Заполнитель для кнопки "Дешифровать" (если нужно скрывать/показывать)
        self.decrypt_placeholder = QtWidgets.QWidget(self.centralwidget)
        self.decrypt_placeholder.setFixedSize(100, 30)
        self.decrypt_placeholder.setVisible(True)  
        self.gridLayout.addWidget(self.decrypt_placeholder, 4, 3, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)

        # Меню и статусбар
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1026, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Действия и панель инструментов (из старого кода)
        self.newMail = QtWidgets.QAction("Новое письмо", MainWindow)
        self.newMail.setShortcuts(QtGui.QKeySequence("Ctrl+N"))
        self.newMail.setIcon(QtGui.QIcon(r"./MailClient-master/img/new.png"))
        self.newMail.setStatusTip("Написать новое письмо")

        self.settingsAct = QtWidgets.QAction("IMAP/SMTP", MainWindow)
        self.settingsAct.setShortcuts(QtGui.QKeySequence("Ctrl+S"))
        self.settingsAct.setStatusTip("Настройка серверов почты IMAP/SMTP")
        self.settingsAct.setIcon(QtGui.QIcon(r"./MailClient-master/img/settings.png"))

        self.updateAct = QtWidgets.QAction("Обновить", MainWindow)
        self.updateAct.setStatusTip("Обновить ящик с письмами")
        self.updateAct.setIcon(QtGui.QIcon(r"./MailClient-master/img/refresh.png"))

        self.keygenAct = QtWidgets.QAction("Генерация ключей", MainWindow)
        self.keygenAct.setStatusTip("Генерация ключей шифрования")
        self.keygenAct.setIcon(QtGui.QIcon(r"./MailClient-master/img/key.png"))

        self.exitAct = QtWidgets.QAction("Выйти", MainWindow)
        self.exitAct.setShortcuts(QtGui.QKeySequence("Alt+F4"))
        self.exitAct.setIcon(QtGui.QIcon(r"./MailClient-master/img/exit.png"))
        self.exitAct.setStatusTip("Выйти из программы")

        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.addAction(self.newMail)
        self.toolBar.addAction(self.updateAct)
        self.toolBar.addAction(self.settingsAct)
        self.toolBar.addAction(self.keygenAct)
        self.toolBar.addAction(self.exitAct)

        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Почтовый клиент"))
        self.decrypt_button.setText(_translate("MainWindow", "дешифровать\n"
"письмо"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
